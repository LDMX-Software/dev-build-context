
name: Foundations

# only build if push changes to files involved in the base build
on:
  push:
    branches: [ main ]
    paths: [ 'ldmx.sh' , 'Dockerfile' , 'install-scripts/**' , '**base.yml' ]

# build the "base" images in parallel
# and then tell the derivatives to rebuild
jobs:
  # basic, vanilla development container
  basic:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build It!
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ldmx/dev
        tags: latest
  #minimal container for lighter production build
  minimal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build It!
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ldmx/dev
        build_args: MINIMAL=ON
        tags: minimal
  # basic dev container but using python2 with PyROOT instead of python3
  pyroot2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build It!
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ldmx/dev
        build_args: PyROOT_PyVersion=2
        tags: pyroot2
  #tell the derivatives to rebuild themselves
  inform-derivatives:
    runs-on: ubuntu-latest
    needs: [ basic, minimal, pyroot2 ]
    steps:
    - name: Tell Derivatives to Rebuild
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.LDMX_ORG_TOKEN }}
        event-type: rebuild-derivatives
