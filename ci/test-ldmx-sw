#!/bin/bash

set -o errexit
set -o nounset

curl -s https://tomeichlersmith.github.io/denv/install | sh

echo "::group::initialize environment"
denv init ${1}
echo "::endgroup::"

echo "::group::clone ldmx-sw"
git clone  --recursive --branch ${2} https://github.com/LDMX-Software/ldmx-sw.git
echo "::endgroup::"

echo "::group::patch ldmx-sw"
patch_file="ci/interop/${2}.patch"
if [ -f "${patch_file}" ]; then
  echo "applying ${patch_file}"
  git -C ldmx-sw apply "../${patch_file}"
else
  echo "no patches found (${patch_file} does not exist)"
fi
echo "::endgroup::"

ldmx_sw_major="$(echo "${2}" | cut -f 1 -d .)"
ldmx_sw_minor="$(echo "${2}" | cut -f 2 -d .)"

echo "::group::build ldmx-sw"
if [ "${2}" = "trunk" ] || [ "${ldmx_sw_major}" -gt 4 ] || [ "${ldmx_sw_major}" -eq 4 ] && [ "${ldmx_sw_minor}" -gt 0 ]; then
  echo "we can use just since we are on trunk or a release >= 4.1.0"
  just ldmx-sw/configure
  just ldmx-sw/build
else
  denv cmake -B ldmx-sw/build -S ldmx-sw
  denv cmake --build ldmx-sw build
fi
echo "::endgroup::"

echo "::group::basic simulation run"
denv fire ldmx-sw/SimCore/test/basic.py
echo "::endgroup::"
